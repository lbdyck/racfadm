)ATTR DEFAULT(^+_)
   _  TYPE(INPUT)   INTENS(HIGH) CAPS(ON)  JUST(LEFT)   HILITE(USCORE)
   @  TYPE(INPUT)   INTENS(HIGH) CAPS(OFF) JUST(LEFT)   HILITE(USCORE)
   {  TYPE(TEXT)    INTENS(LOW)  SKIP(ON)  COLOR(BLUE)
   }  TYPE(TEXT)    INTENS(LOW)  SKIP(ON)  COLOR(RED)
   +  TYPE(TEXT)    INTENS(LOW)  SKIP(ON)  COLOR(GREEN)
   ~  TYPE(TEXT)    INTENS(LOW)  SKIP(ON)  COLOR(TURQ)
)BODY EXPAND(\\)
+\-\(^RACFADM - Settings+)\-\
^Command ===>_ZCMD
^
^General
+  Default filter{...._Z                              { Search string (optional)
+  Status interval{..._Z   ~(0-9999){or_Z ~% (0-99)    {Progress message number
+  Display files{....._Z~ (B=Browse, E=Edit, V=View)   {Display reports/files
+  Confirm panel{....._Z~ (Y=Yes, N=No)                {Confirm command request
+  Showmvs data{......_Z~ (Y=Yes, N=No)+Pgm/DSN_Z{      Showmvs RACF data
+  Prefix dataset{...._Z~ (Y=Yes, N=No)                {Use TSO prefix as HLQ
+
^Management
+  Administrator{....._Z~ (Y=Yes, N=No)                {Line cmds add/chg/etc.
+  Admin RACF API{...._Z~ (Y=Yes, N=No)                {IRRXUTIL to add/chg/prof
+  IBM RACF opts{....._Z~ (Y=Yes, N=No)+Panel/DSNs_Z{   RACF Systems/RRSF/Certs
+  RACF commands{....._Z~ (D=Display, L=Log, B=Both, N=No)     {View  RACF cmds
+  REXX trace{........_Z~ (L=Labels, P=Pgms, R=Results, N=No)  {Trace REXX pgms
+
^Adding TSO userids
+  Default password{..@Z             ~ +Passphrase_Z{ { New/chg user's password
+  User catalog{......_Z                              { z/OS alias catalog
+  ISPPROF dataset{..._Z                              { Append qualifiers to id
+  User dataset{......_Z                              { Append qualifiers to id
)INIT
  VGET (SETGFLTR SETGSTA  SETGSTAP SETGDISP  SETGCONF SETGMVS  +
        SETGMVSD SETGPREF +
        SETMADMN SETMIRRX SETMIBMM SETMIBMD  SETMSHOW SETMTRAC +
        SETTPSWD SETMPHRA SETTCTLG SETTPROF SETTUDSN) PROFILE

  /* General Settings */
  IF (&SETGSTA NE &Z)
     &SETGSTAP = ''
  &SETGDISP = TRANS (&SETGDISP BROWSE,B EDIT,E VIEW,V *,*)
  &SETGCONF = TRANS (&SETGCONF YES,Y NO,N *,*)
  &SETGMVS  = TRANS (&SETGMVS  YES,Y NO,N *,*)
  &SETGMVSD = TRANS (&SETGMVSD YES,Y NO,N *,*)
  &SETGPREF = TRANS (&SETGPREF YES,Y NO,N *,*)

  /* Management Settings */
  &SETMADMN = TRANS (&SETMADMN YES,Y NO,N *,*)
  &SETMIRRX = TRANS (&SETMIRRX YES,Y NO,N *,*)
  &SETMIBMM = TRANS (&SETMIBMM YES,Y NO,N *,*)
  &SETMIBMD = TRANS (&SETMIBMD YES,Y NO,N *,*)
  &SETMSHOW = TRANS (&SETMSHOW DISPLAY,D LOG,L BOTH,B NO,N *,*)
  &SETMTRAC = TRANS (&SETMTRAC LABELS,L PROGRAMS,P RESULTS,R NO,N *,*)
  &SETMPHRA = TRANS (&SETMPHRA YES,Y NO,N *,*)

  .ZVARS = '(SETGFLTR SETGSTA  SETGSTAP SETGDISP SETGCONF +
             SETGMVS  SETGMVSD SETGPREF +
             SETMADMN SETMIRRX SETMIBMM SETMIBMD SETMSHOW SETMTRAC +
             SETTPSWD SETMPHRA SETTCTLG SETTPROF SETTUDSN)'

  .HELP   = #RACSET1
  .CURSOR = SETGFLTR
)PROC
  /* General Settings */
  &SETGDISP = TRANS (&SETGDISP B,BROWSE E,EDIT V,VIEW *,*)
  &SETGCONF = TRANS (&SETGCONF Y,YES, N,NO *,*)
  &SETGMVS  = TRANS (&SETGMVS  Y,YES, N,NO *,*)
  &SETGMVSD = TRANS (&SETGMVSD Y,YES, N,NO *,*)
  &SETGPREF = TRANS (&SETGPREF Y,YES, N,NO *,*)

  /* Management Settings */
  &SETMADMN = TRANS (&SETMADMN Y,YES, N,NO *,*)
  &SETMIRRX = TRANS (&SETMIRRX Y,YES, N,NO *,*)
  &SETMIBMM = TRANS (&SETMIBMM Y,YES, N,NO *,*)
  &SETMIBMD = TRANS (&SETMIBMD Y,YES, N,NO *,*)
  &SETMSHOW = TRANS (&SETMSHOW D,DISPLAY L,LOG B,BOTH N,NO *,*)
  &SETMTRAC = TRANS (&SETMTRAC L,LABELS P,PROGRAMS R,RESULTS, N,NO *,*)
  &SETMPHRA = TRANS (&SETMPHRA Y,YES, N,NO *,*)

  /* General Settings */
  IF (&SETGSTA > 0)
     VER (&SETGSTA,NB,RANGE,0,9999)
     VER (&SETGSTAP,LIST, )
  IF (&SETGSTAP > 0)
     VER (&SETGSTA,LIST, )
     VER (&SETGSTAP,NB,RANGE,1,99)
  IF (&SETGSTA = &Z & &SETGSTAP = &Z)
     &SETGSTA = 0
  VER (&SETGDISP,NB,LIST,BROWSE,EDIT,VIEW)
  VER (&SETGCONF,NB,LIST,NO,YES)
  VER (&SETGMVS,NB,LIST,NO,YES)
  VER (&SETGMVSD,NB,LIST,NO,YES)
  VER (&SETGPREF,NB,LIST,NO,YES)

  /* Management Settings */
  VER (&SETMADMN,NB,LIST,NO,YES)
  VER (&SETMIRRX,NB,LIST,NO,YES)
  VER (&SETMIBMM,NB,LIST,NO,YES)
  VER (&SETMIBMD,NB,LIST,NO,YES)
  VER (&SETMSHOW,NB,LIST,DISPLAY,LOG,BOTH,NO)
  VER (&SETMTRAC,NB,LIST,LABELS,PROGRAMS,RESULTS,NO)
  VER (&SETMPHRA,NB,LIST,NO,YES)

  /* Adding TSO Userid Settings */
  *REXX (SETTCTLG SETTPROF DSTTUDSN)
        SETTCTLG = STRIP(SETTCTLG,,"'")
        SETTPROF = STRIP(SETTPROF,,"'")
        SETTUDSN = STRIP(SETTUDSN,,"'")
  *ENDREXX

  VPUT (SETGFLTR SETGSTA  SETGSTAP SETGDISP  SETGCONF SETGMVS  +
        SETGMVSD SETGPREF +
        SETMADMN SETMIRRX SETMIBMM SETMIBMD  SETMSHOW SETMTRAC +
        SETTPSWD SETMPHRA SETTCTLG SETTPROF SETTUDSN) PROFILE
)END
/*--------------------------------------------------------------------*/
/*                             Comments                               */
/*--------------------------------------------------------------------*/
/*                                                                    */
/*  1) The variables contain the full word, no abbreviations, in      */
/*     hopes of making it easier to understand/maintain code          */
/*                                                                    */
/*  2) Naming standards for variables:                                */
/*     - Syntax                                                       */
/*         SET#????                                                   */
/*     - Where                                                        */
/*         SET .... Settings (option 0)                               */
/*         # ...... G=General, M=Management, T=Adding TSO Userid,     */
/*                  P=Program/Panel (Load, REXX or CLIST member),     */
/*                  D=Dataset, J=JCL and R=Refresh                    */
/*          ???? ... Field name, any characters and for Refresh       */
/*                   variables (4th chr = R) the section name         */
/*                   (GEN, MGT, TSO, MVS, IBM, RPT and MSG)           */
/*     - The REXX programs and panels will translate the abbreviated  */
/*       contents to its full word, in hopes of making it easier to   */
/*       understand/maintain the code, for example: Y, will be        */
/*       translated to YES                                            */
/*                                                                    */
/*--------------------------------------------------------------------*/
