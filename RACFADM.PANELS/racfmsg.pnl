)ATTR DEFAULT(%+_)
   _  TYPE(INPUT)   INTENS(HIGH) CAPS(ON) JUST(LEFT)  HILITE(USCORE)
   %  TYPE(TEXT)    INTENS(HIGH) SKIP(ON)
   +  TYPE(TEXT)    INTENS(LOW)  SKIP(ON) COLOR(GREEN)
   {  TYPE(TEXT)    INTENS(LOW)  SKIP(ON) COLOR(BLUE)
   !  TYPE(TEXT)    INTENS(LOW)  SKIP(ON) COLOR(TURQ)
)BODY EXPAND(\\)
+\-\(%RACFADM - RACF Messages+)\-\
%Command ==>_ZCMD
+
%Search:
+  Userid!......._RACFMID { (&USERID, *)
+  Lpar!........._RACFMLPR{ (&LPAR, *)
+  Date!........._RACFMDAT{ (mm/dd/yy, =, *)
+  Type!........._Z{        (A=All, I=Insufficient, V=Violation)
+  USS Only!....._Z{        (Y=Yes, N=No)
+
%Process:
+  Mode!........._Z{        (F=Foreground, B=Batch)
+  Edit JCL!....._Z{        (Y=Yes, N=No)
+
%File:
+  Log!.........._Z{        (O=Operlog, S=Syslog)
+  Scan!........._Z{        (A=Active log, B=Backup DSN)
+  Backup DSN!..._SETDMSG                                     +
+
%Job card:
_ZLLGJOB1
_ZLLGJOB2
_ZLLGJOB3
_ZLLGJOB4
)INIT
  .CURSOR = RACFMID
  .HELP   = #RACMSG
  .ZVARS  = '(RACFMTYP RACFMUSS RACFMMOD RACFMJCL SETLMSG RACFMSCN)'
)PROC
   IF (&RACFMID EQ &Z)
      &RACFMID = *
   IF (&LPAR EQ &Z)
      &LPAR = *
   IF (&RACFMID NE *)
      VER (&RACFMID,NB,NAME)
   IF (&RACFMLPR NE *)
      VER (&RACFMLPR,NB,NAME)

   *REXX(RACFMDAT)
    if racfmdat = '=' then
       racfmdat = date('u')
   *ENDREXX

   IF (&RACFMDAT NE *)
      &TMPDATE = &RACFMDAT
      *REXX(*)
        RACFMDAT = SUBSTR(RACFMDAT,7,2)"/"||,
                   SUBSTR(RACFMDAT,1,2)"/"||,
                   SUBSTR(RACFMDAT,4,2)
      *ENDREXX
      VER (&RACFMDAT,NB,IDATE)
      &RACFMDAT = &TMPDATE

   VER (&RACFMTYP,NB,LIST,A,V,I)
   VER (&RACFMUSS,NB,LIST,Y,N)
   VER (&RACFMMOD,NB,LIST,F,B)
   VER (&RACFMJCL,NB,LIST,Y,N)
   VER (&SETLMSG,NB,LIST,O,S)
   VER (&RACFMSCN,NB,LIST,A,B)

   IF (&RACFMSCN = B)
      IF (.MSG = &Z & &SETDMSG NE &Z)
         &BADDSN   = N
         &RACFSMSG = &Z
         &RACFLMSG = &Z
         &TMPDMSG1 = &Z
         &TMPDMSG2 = &Z
         *REXX (SETDMSG  BADDSN RACFSMSG RACFLMSG RACFMDAT
                SETGPREF TMPDMSG1 TMPDMSG2)
            X = MSG("OFF")
            IF (SETGPREF = "YES") THEN DO
               IF (SUBSTR(SETDMSG,1,1) <> "'") THEN
                  TMPDMSG1 = SYSVAR('SYSPREF')"."SETDMSG
               ELSE
                  TMPDMSG1 = STRIP(SETDMSG,,"'")
            END
            ELSE
               TMPDMSG1 = STRIP(SETDMSG,,"'")
            PARSE VAR TMPDMSG1 DSN1 "&" SYMBOL "." DSN2
            SYMBVAL  = MVSVAR("SYMDEF",SYMBOL)
            TMPDMSG2 = DSN1""SYMBVAL""DSN2
            IF (RACFMDAT = "*") THEN DO
               X = OUTTRAP("LC.")
               ADDRESS TSO "LISTCAT ENT('"TMPDMSG2"')"
               X = OUTTRAP("OFF")
               PARSE VAR LC.1 W1 W2 .
               IF (W1 = "GDG") & (W2 = "BASE") THEN DO
                  RACFSMSG = 'Invalid Backup DSN'
                  RACFLMSG = 'Can not use a base GDG when date is',
                             'an asterick (*).'
                  BADDSN   = "Y"
                  RETURN
               END
            END
            PARSE VAR TMPDMSG2 DSN "(" GDGNO ")" .
            IF (DATATYPE(GDGNO,'N') = 1) THEN DO
               X = OUTTRAP("LC.")
               "LISTCAT ENT('"DSN"')"
               X = OUTTRAP("OFF")
               IF (LC.0 > (2 - 2 * GDGNO)) THEN DO
                  A   = LC.0 - 1 + 2 * GDGNO
                  TMPDMSG2 = SUBWORD(LC.A,3,1)
               END
               DROP LC.
            END
            CHKDSN = "'"TMPDMSG2"'"
            IF (SYSDSN(CHKDSN) <> "OK") THEN DO
               RACFSMSG = 'DSN does not exist'
               RACFLMSG = 'The dataset does not reside',
                          'in the catalog or on a disk',
                          'pack, please investigate.',
                          ' DSN = 'CHKDSN
               BADDSN   = "Y"
            END
         *ENDREXX

  IF (&BADDSN = Y)
     .CURSOR = SETDMSG
     .MSG    = RACF011

  IF (&RACFMMOD = B)
     VER(&ZLLGJOB1,NB)
)END
